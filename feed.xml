<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://bakperi.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://bakperi.com/" rel="alternate" type="text/html" /><updated>2022-02-13T07:06:13-06:00</updated><id>https://bakperi.com/feed.xml</id><title type="html">The Blog of Brian Akperi</title><entry><title type="html">Using Temporary Files In Python</title><link href="https://bakperi.com/2022/02/13/Using-Temporary-Files-In-Python.html" rel="alternate" type="text/html" title="Using Temporary Files In Python" /><published>2022-02-13T00:00:00-06:00</published><updated>2022-02-13T00:00:00-06:00</updated><id>https://bakperi.com/2022/02/13/Using-Temporary-Files-In-Python</id><author><name></name></author><summary type="html">Using Temporary Files in Python So in most instances when working on a project, you would have access to read and write from the folders which you are working in? But what if you don’t? That’s the dilemma I faced while using a certain data platform where I didn’t have direct access to the underlying folder structure. What to do in this case when you need to write a file then? In particular, I was using matplotlib/plotly to create some visualizations and I needed to put the png/html files somewhere. Temporary files to the rescue! import tempfile import datetime now = datetime.datetime.now() fd, path = tempfile.mkstemp(suffix='.png') try: #Write the info to the temporary file plt.savefig(path) with open(path) as f: #Put the temporary file into the required folder new_folder.write(&quot;Image&quot;+now.strftime(&quot;%Y-%m-%d&quot;)+&quot;.png&quot;, f) finally: #Remove the temporary file os.remove(path) You can extend this to any file type you want and may prove to be useful whenever you’re dealing with systems where you don’t have direct access to folders but you can read/write to them via an API call. Just replace the pseudocode of new_folder.write() with whatever you need!</summary></entry><entry><title type="html">Performance Measures</title><link href="https://bakperi.com/2021/06/23/performance-measures.html" rel="alternate" type="text/html" title="Performance Measures" /><published>2021-06-23T00:00:00-05:00</published><updated>2021-06-23T00:00:00-05:00</updated><id>https://bakperi.com/2021/06/23/performance-measures</id><author><name></name></author><summary type="html">Real World Data Science - Performance Measures</summary></entry><entry><title type="html">March Madness 2018</title><link href="https://bakperi.com/2021/04/11/march-madness-2018.html" rel="alternate" type="text/html" title="March Madness 2018" /><published>2021-04-11T00:00:00-05:00</published><updated>2021-04-11T00:00:00-05:00</updated><id>https://bakperi.com/2021/04/11/march-madness-2018</id><author><name></name></author><summary type="html">March Madness 2018 Kaggle Competition</summary></entry></feed>